{
  "permissions": {
    "allow": [
      "Bash(source:*)",
      "Bash(pytest:*)",
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(rm:*)",
      "Bash(grep:*)",
      "Bash(venv/bin/python migrate_dynamic.py:*)",
      "Bash(mv:*)",
      "Bash(venv/bin/python migrate.py:*)",
      "Bash(make:*)",
      "Bash(venv/bin/python test_migration_scenarios.py:*)",
      "Bash(venv/bin/python:*)",
      "Bash(venv/bin/pytest -v)",
      "Bash(venv/bin/pytest tests/ -v)",
      "Bash(venv/bin/pytest tests/test_auth.py::TestAuthentication::test_login_success -v -s)",
      "Bash(DATABASE_URL=postgresql://postgres:password@localhost:5432/lucid_identity_test venv/bin/python migrate.py)",
      "Bash(venv/bin/pytest tests/test_auth.py::TestAuthentication::test_login_success -xvs)",
      "Bash(venv/bin/pytest tests/test_auth.py::TestAuthentication::test_login_success -xvs --tb=short --timeout=10)",
      "Bash(venv/bin/pytest tests/test_auth.py::TestAuthentication::test_login_success -xvs --tb=full)",
      "Bash(venv/bin/pytest tests/test_auth.py::TestAuthentication::test_login_success -xvs --tb=long)",
      "Bash(venv/bin/pytest tests/ -q --tb=no)",
      "Bash(venv/bin/pytest tests/test_passwordless.py -v --tb=no)",
      "Bash(venv/bin/pytest tests/test_auth.py -v --tb=short 2 >& 1)",
      "Bash(venv/bin/pytest tests/test_auth.py -v)",
      "Bash(venv/bin/pytest tests/test_passwordless.py::TestPasswordlessAuthentication::test_update_profile_success -xvs --tb=short)",
      "Bash(venv/bin/pytest tests/test_passwordless.py::TestPasswordlessAuthentication::test_update_profile_success -xvs)",
      "Bash(ls:*)",
      "Bash(chmod:*)",
      "Bash(find:*)",
      "Bash(venv/bin/pytest tests/test_apple_auth_security.py::TestAppleAuthSecurity::test_apple_nonce_generation -v -s)",
      "Bash(venv/bin/pytest tests/test_apple_auth_security.py -v --tb=short)",
      "Bash(venv/bin/pytest tests/test_apple_auth_security.py::TestAppleAuthSecurity::test_apple_nonce_rate_limiting -v)",
      "Bash(venv/bin/pytest tests/test_apple_auth_security.py -v)",
      "Bash(venv/bin/pytest tests/test_apple_auth_security.py::TestAppleAuthSecurity::test_apple_auth_origin_validation -v -s)",
      "Bash(venv/bin/pytest tests/test_apple_id_token.py -v --tb=short)",
      "Bash(venv/bin/pytest tests/test_apple_security.py -v --tb=short)",
      "Bash(venv/bin/pytest tests/test_apple_security.py -v)",
      "Bash(venv/bin/pytest tests/test_apple_security.py::TestAppleSecurityNonce::test_nonce_expiration -v)",
      "Bash(venv/bin/pytest tests/test_passwordless.py -v --tb=short)",
      "Bash(venv/bin/pytest tests/test_passwordless.py::TestPasswordlessAuthentication::test_update_profile_success -v)",
      "Bash(venv/bin/pytest tests/test_passwordless.py -v)",
      "Bash(venv/bin/pytest tests/test_rate_limiter.py -v --tb=short)",
      "Bash(venv/bin/pytest tests/test_rate_limiter.py -v)",
      "Bash(venv/bin/pytest tests/test_rate_limiter.py::test_rate_limiter_memory_cleanup -v -s)",
      "Bash(venv/bin/pytest tests/test_rate_limiter.py::test_rate_limiter_memory_cleanup -v)",
      "Bash(venv/bin/pytest tests/test_user_caching.py -v --tb=short)",
      "Bash(venv/bin/pytest tests/test_user_caching.py -v)",
      "Bash(uvicorn:*)",
      "Bash(curl:*)",
      "Bash(./test_endpoints.sh:*)",
      "Bash(timeout:*)",
      "Bash(venv/bin/pytest tests/test_sessions.py -v)",
      "Bash(venv/bin/pytest tests/test_providers.py -v)",
      "Bash(venv/bin/pytest tests/test_admin.py -v)",
      "Bash(venv/bin/pytest tests/test_sessions.py tests/test_admin.py tests/test_rate_limiter.py tests/test_oauth_cache.py tests/test_user_caching.py -v --tb=no)",
      "Bash(venv/bin/pytest --co -q)",
      "Bash(venv/bin/pytest tests/test_providers.py::TestProviders::test_google_authentication_new_user -v)",
      "Bash(venv/bin/pytest tests/test_verifications.py::TestVerifications::test_create_verification_email_success -v)",
      "Bash(venv/bin/pytest tests/test_users.py::TestUsers::test_update_current_user_profile -v)",
      "Bash(venv/bin/pytest tests/test_google_id_token.py -v --tb=no)",
      "Bash(venv/bin/pytest tests/test_sessions.py tests/test_providers.py tests/test_verifications.py tests/test_users.py tests/test_admin.py -v --tb=no)",
      "Bash(venv/bin/pytest tests/test_providers.py::TestProviders::test_google_authentication_new_user -v -s)",
      "Bash(venv/bin/pytest tests/test_providers.py -v --tb=no)",
      "Bash(venv/bin/pytest tests/test_providers.py::TestProviders::test_apple_authentication_with_user_data -v)",
      "Bash(venv/bin/pytest tests/test_verifications.py::TestVerifications::test_create_verification_both_contacts -v)",
      "Bash(venv/bin/pytest tests/test_verifications.py::TestVerifications::test_validate_verification_invalid_code -v)",
      "Bash(flake8:*)",
      "Bash(black:*)",
      "Bash(pip check)",
      "Bash(venv/bin/pytest tests/test_apple_multiple_audiences.py -v)",
      "Bash(venv/bin/pytest tests/test_apple_multiple_audiences.py::TestAppleMultipleAudiences::test_mock_verify_multiple_audiences -v)",
      "Bash(if [ -d \"venv\" ])",
      "Bash(then source venv/bin/activate)",
      "Bash(else echo \"No venv found\")",
      "Bash(fi)",
      "Bash(else echo \"No venv found - please run in your virtual environment\")",
      "Bash(USE_MOCK_SMS_SERVICE=true USE_MOCK_EMAIL_SERVICE=true pytest tests/test_mailpit_service.py::test_mailpit_service_direct tests/test_mailpit_service.py::test_mailpit_service_html_templates tests/test_verifications.py::TestEmailTemplates::test_send_welcome_email tests/test_verifications.py::TestEmailTemplates::test_send_password_reset_email tests/test_verifications.py::TestEmailTemplates::test_send_account_locked_email -xvs)",
      "Bash(USE_MOCK_SMS_SERVICE=true pytest tests/test_verifications.py::TestVerifications::test_create_verification_phone_success -xvs)",
      "Bash(rg:*)",
      "Bash(USE_MOCK_EMAIL_SERVICE=true pytest tests/test_mock_services.py::test_mock_email_service_enabled -v -s)",
      "Bash(USE_MOCK_EMAIL_SERVICE=true pytest tests/test_mock_services.py::test_mock_email_service_enabled -v)",
      "Bash(USE_MOCK_EMAIL_SERVICE=true USE_MOCK_SMS_SERVICE=true pytest tests/test_mock_services.py -v)",
      "Bash(git add:*)",
      "Bash(git checkout:*)",
      "Bash(USE_MOCK_OAUTH_SERVICE=true python test_api_endpoints.py)",
      "Bash(USE_MOCK_OAUTH_SERVICE=true pytest tests/test_providers.py::TestProviders::test_google_authentication_invalid_token -xvs)",
      "Bash(mkdir:*)",
      "Bash(npm run build:*)",
      "Bash(npm run:*)",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(git remote remove:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git remote set-url:*)"
    ],
    "deny": []
  }
}